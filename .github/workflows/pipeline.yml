name: CI/CD Pipeline - MERN App

on:
  push:
    branches:
      - main   # Trigger when code is pushed to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USER }}/form-backend-image:latest
      FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USER }}/form-frontend-image:latest
      KUBECONFIG_FILE: ${{ github.workspace }}/kubeconfig.yaml

    steps:
      # 1. Checkout repo
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Log in to Docker Hub using GitHub Secrets
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      # 3. Build & Push Backend
      - name: Build & Push Backend
        run: |
          docker build -t $BACKEND_IMAGE ./form-backend
          docker push $BACKEND_IMAGE

      # 4. Build & Push Frontend
      - name: Build & Push Frontend
        run: |
          docker build -t $FRONTEND_IMAGE ./form-frontend
          docker push $FRONTEND_IMAGE

      # 5. Setup kubectl
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # 6. Write kubeconfig from GitHub Secret
      - name: Write kubeconfig
        run: echo "${{ secrets.KUBECONFIG_PROD }}" > $KUBECONFIG_FILE

      # 7. Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          export KUBECONFIG=$KUBECONFIG_FILE
          kubectl set image deployment/form-backend form-backend=$BACKEND_IMAGE -n production --record || true
          kubectl set image deployment/form-frontend form-frontend=$FRONTEND_IMAGE -n production --record || true
          kubectl rollout status deployment/form-backend -n production || true
          kubectl rollout status deployment/form-frontend -n production || true
